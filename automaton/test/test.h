
#pragma once
#include <map>
#include <vector>
#include <string>
struct Token
{
	int type = -1;
	std::string value;
	Token() = default;
	Token(int,const std::vector<char>&);
};
class Automaton
{
private:
	int nowState = 0;
    std::map<char, int> chars = { 
{ 'i', 0 }, 
{ '3', 1 }, 
{ '7', 2 }, 
{ 's', 3 }, 
{ 'd', 4 }, 
{ '1', 5 }, 
{ 'f', 6 }, 
{ '6', 7 }, 
{ 'a', 8 }, 
{ '0', 9 }, 
{ '9', 10 }, 
{ 'o', 11 }, 
{ '5', 12 }, 
{ 'r', 13 }, 
{ '4', 14 }, 
{ '2', 15 }, 
{ '8', 16 }, 
};
    int states[11][19] = { 
{1, 2, 2, -1, -1, 2, 3, 2, 4, 2, 2, -1, 2, -1, 2, 2, 2, -1, },
{-1, -1, -1, -1, -1, -1, 9, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-4, 2, 2, -4, -4, 2, -4, 2, -4, 2, 2, -4, 2, -4, 2, 2, 2, -4, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 7, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, 5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, },
{-5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, -5, },
{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 8, -1, -1, -1, -1, },
{-3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, -3, },
{-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, },
};
    
	std::vector<char> nowstr;
	
private:
	int getCharId(char c);

public:
    Automaton() = default;
	Token next(char c);
};
    